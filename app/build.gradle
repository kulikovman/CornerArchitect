plugins {
    id 'kotlinx-serialization'
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

def prefixAppVersion = "1.0"

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.corner.searcharchitect"
        minSdk 23
        targetSdk 31
        versionCode getCodeVersion()
        versionName getNameVersion(prefixAppVersion)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def name = outputFileName.replace("app-", "search-architect-")
            outputFileName = name.replace(".apk", "-${variant.versionName}.apk")
        }
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    // Base
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation "androidx.fragment:fragment-ktx:1.3.6"
    implementation "androidx.work:work-runtime-ktx:2.7.0"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.collection:collection-ktx:1.1.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1'

    // Google services
    implementation platform('com.google.firebase:firebase-bom:28.4.2')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'

    // Room
    implementation "androidx.room:room-runtime:2.3.0"
    kapt "androidx.room:room-compiler:2.3.0"
    implementation "androidx.room:room-ktx:2.3.0"
    testImplementation "androidx.room:room-testing:2.3.0"
    implementation 'androidx.room:room-common:2.3.0'
    implementation 'androidx.room:room-ktx:2.3.0'

    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Navigation
    implementation "androidx.navigation:navigation-runtime-ktx:2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:2.3.5"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    androidTestImplementation "androidx.navigation:navigation-testing:2.3.5"
    implementation "androidx.navigation:navigation-compose:2.4.0-beta02"

    // Hilt
    implementation 'com.google.dagger:hilt-android:2.38.1'
    kapt 'com.google.dagger:hilt-compiler:2.37'

    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // Retrofit 2
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'


    // OkHttp
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.8'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // Facebook
    //implementation 'com.facebook.android:facebook-android-sdk:latest.release'

}


def getCodeVersion() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', 'HEAD', '--count'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    } catch (ignored) {
        return 1
    }
}

String getNameVersion(String prefixAppVersion) {
    String lastTag = getLastTagOnCurrentBranch(prefixAppVersion)
    if (lastTag == null || lastTag == "") {
        return prefixAppVersion + "." + getCodeVersion()
    }
    return lastTag + "." + countCommitsSinceTag(lastTag)
}

// Для получения корректного значения:
// Последний тег должен быть таким же как prefixAppVersion
// При обновлении версии в prefixAppVersion нужно так же добавить новый тег
// Подсчет третьего блока версии идет с последнего тега
String getLastTagOnCurrentBranch(String prefixAppVersion) {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'tag', '-l', prefixAppVersion
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (ignored) {
        logger.error('getLastTag() error, ' + ignored)
        return null
    }
}

def countCommitsSinceTag(tag) {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', 'HEAD', '--count', "${tag}...HEAD"
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (ignored) {
        logger.error('gitCommitsSinceTag() error, ' + ignored)
        return null
    }
}